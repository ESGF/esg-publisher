
I always forget the logs levels and the guards... so here they are.
As of this writing the codebase uses commons logging delegating to
log4j.

The following is an excerpt from the commons logging page.
http://commons.apache.org/logging/guide.html

Messages are logged to a logger, such as log by invoking a method
corresponding to priority. The org.apache.commons.logging.Log
interface defines the following methods for use in writing log/trace
messages to the log:

    log.fatal(Object message);
    log.fatal(Object message, Throwable t);
    log.error(Object message);
    log.error(Object message, Throwable t);
    log.warn(Object message);
    log.warn(Object message, Throwable t);
    log.info(Object message);
    log.info(Object message, Throwable t);
    log.debug(Object message);
    log.debug(Object message, Throwable t);
    log.trace(Object message);
    log.trace(Object message, Throwable t);
              
Semantics for these methods are such that it is expected that the
severity, from highest to lowest, of messages is ordered as above. In
addition to the logging methods, the following are provided for code
guards:

    log.isFatalEnabled();
    log.isErrorEnabled();
    log.isWarnEnabled();
    log.isInfoEnabled();
    log.isDebugEnabled();
    log.isTraceEnabled();
              
