#!/usr/bin/env python

import sys
import getpass
import getopt

from sqlalchemy import create_engine
from sqlalchemy.exceptions import *
from esgcet.model import *
from esgcet.config import loadConfig

usage = """Usage:
    esgdrop_tables [options]

    Delete the ENTIRE ESG node database.

Options:

    -i init_file: Initialization file. If not specified, the default installed init file is read.

"""

def main(argv):

    try:
        args, lastargs = getopt.getopt(argv, "i:")
    except getopt.error:
        print sys.exc_value
        print usage
        sys.exit(0)

    init_file = None
    for flag, arg in args:
        if flag=='-i':
            init_file = arg

    config = loadConfig(init_file)
    engine = create_engine(config.get('DEFAULT', 'dburl'), echo=True, pool_recycle=3600)

    tables = [
        datasetAttrTable,
        fileAttrTable,
        fileVariableAttrTable,
        variableAttrTable,
        filevarDimensionTable,
        varDimensionTable,
        eventTable,
        fileVariableTable,
        variableTable,
        fileVersionTable,
        fileTable,
        datasetStatusTable,
        datasetVersionTable,
        datasetTable,
        modelTable,
        standardNameTable,
        experimentTable,
        projectTable,
        catalogTable,
        LASCatalogTable,
        ]

    for table in tables:
        try:
            table.drop(bind=engine)
        except OperationalError:
            pass
        except ProgrammingError:
            pass

if __name__=='__main__':

    ans = raw_input('Do you really want to delete the ENTIRE DATABASE ??? [y/n]: ')
    if ans.lower() !='y':
        sys.exit(0)

    main(sys.argv[1:])
