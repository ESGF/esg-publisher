#------------------------------------------------------------------------------------------
# ESG publisher configuration
#
# This file is divided into sections, with names in square brackets. For example, 
# the default options are listed in the [DEFAULT] section. Defaults apply in 
# all sections. If an option is specified in another section, the value overrides the
# default in that section.
#
# Each section corresponds to an application or a project. For example, the esginitialize
# scripts reads options in the [initialize] section. Project sections have the form:
#    [project:project_id]
# Each project defined by project_options must have a separate section.
#------------------------------------------------------------------------------------------
# Shared options
[DEFAULT]
# 
# dburl defines the connection to the database. The form is:
#   db_driver://user:password@host:port/db_name
# where
#   db_driver = mysql for MySQL
#             = postgres for PostgreSQL
# Important! The database type (PostgreSQL / MySQL) is determined by the db_driver definition in the *default* configuration file (the one installed with python)!
dburl = postgresql://esgcet:esgcetpass@localhost:5432/esgcet

# Logging options:
# Log levels are DEBUG, INFO, WARNING, ERROR, and CRITICAL
# log_format fields are defined in the logging module
# log_filename specifies a log output file. The default is standard output. For example:
#   log_filename = %(here)s/data/esgcet.log
#   where %(here)s indicates the current directory.
# log_datefmt: format string used to output dates and times, same form as time.strftime()
log_level = INFO
log_format = %(levelname)-10s %(asctime)s %(message)s
# log_filename = %(here)s/data/esgcet.log

# Root dataset ID field
root_id = pcmdi

# List identifiers of all gateways
gateway_options = ESG-PCMDI, ESG-NCAR, ESG-ORNL, ESG-BADC, ESG-NCI

# Associate THREDDS service type and service base. The service_base forms the leading
# part of the THREDDS URL.
# THREDDS serviceType | service_base | service_name
# 
thredds_aggregation_services =
  OpenDAP | /thredds/dodsC/ | gridded
  LAS | http://host.sample.gov/las/getUI.do | LASatYourHost
#   WCS | /thredds/wcs/
thredds_file_services =
  HTTPServer | /thredds/fileServer/ | HTTPServer | fileservice
  GridFTP | gsiftp://host.sample.gov:2811/ | GRIDFTP | fileservice
  OpenDAP | /thredds/dodsC/ | OpenDAPServer | fileservice
#  Globus | globus:#DEFAULTENDPOINTNAME#/ | Globus  | fileservice
#  BaseJumper | http://host.sample.gov/basej/queue | BaseJatYourHost | hpss

thredds_offline_services =
  SRM | srm://host.sample.gov:6288/srm/v2/server?SFN=/archive.sample.gov | HRMatPCMDI

# Associate a TTHREDDS path with the absolute location of a dataset directory:
#   tds_path | absolute_location
# This gets translated to <datasetRoot path="tds_path" location="absolute_location" />
thredds_dataset_roots =
  esg_dataroot | /esg/data

# Value of the dataset 'restrictAccess' attribute
thredds_restrict_access = esg-user

# THREDDS reinitialization parameters
# Name of the basic authentication realm
thredds_authentication_realm = THREDDS Data Server

# TDS reinitialization URL
# For V3
# thredds_reinit_url = https://localhost:443/thredds/debug?catalogs/reinit
# For V4
#thredds_reinit_url = https://localhost:443/thredds/admin/debug?catalogs/reinit
# for v5
thredds_reinit_url = https://localhost:443/thredds/admin/debug?Catalogs/recheck
#This is potentially experimental but will cause an error with the publisher.
#thredds_reinit_url = https://localhost:443/thredds/admin/debug?Catalogs/recheck



# Pattern indicating success of TDS reinitialization
thredds_reinit_success_pattern = reinit ok

# TDS error log URL
# For V3
# thredds_reinit_error_url = https://localhost:443/thredds/content/logs/catalogErrors.log
# For V4
thredds_reinit_error_url = https://localhost:443/thredds/admin/content/logs/catalogInit.log

# Pattern that delimits the TDS error log for the most recent reinit
thredds_error_pattern = Catalog init

# TDS error log fatal error pattern
thredds_fatal_error_pattern = **Fatal

# Tomcat TDS user
thredds_username = dnode_user
thredds_password = changeme

# Specify target for THREDDS catalog generation
#
# Each dataset catalog will be written to a file named
#
# <thredds_root>/nnn/<thredds_catalog_basename>
#
# where 'nnn' is an integer, and:
#
#   thredds_root = top level directory. An absolute path, not containing any substitution patterns.
#   thredds_url = URL of the top-level THREDDS directory
#   thredds_catalog_basename = basename of the catalog. Should contain the patterns %(dataset_id)s and %(version)s, and have extension .xml
#   thredds_use_numbered_directories = whether to use numbered catalog subdirectories; default=True, but if false, bases subdirectory tree on DRS
#   thredds_max_catalogs_per_directory = max number of catalogs in a subdirectory
#   thredds_master_catalog_name = description of the TDS master catalog
#
# The master catalog is named <thredds_root>/catalog.xml
#
thredds_root = /esg/content/thredds/esgcet

# for V4
# thredds_url = http://yourhost/thredds/esgcet
# for V5
thredds_url = http://yourhost/thredds/catalog/esgcet

thredds_catalog_basename = %(dataset_id)s.v%(version)s.xml
thredds_use_numbered_directories = True
thredds_max_catalogs_per_directory = 500
thredds_master_catalog_name = Earth System Grid catalog
thredds_root_catalog_name = Earth System Root catalog

# These options describe the available THREDDS services to the gateway.
#    thredds_service_applications = service_name | associated_client [service_name | associated_client ...]
#    thredds_service_auth_required = true_or_false: describes whether the gateway must authenticate the service
#    thredds_service_descriptions = service_name | service_description [service_name | service_description ...]
# thredds_service_applications =
#       GRIDFTPatPCMDI | DataMover-Lite
#       HTTPServer | Web Browser
#       HTTPServer | Web Script
#       gridded | Web Browser
# thredds_service_auth_required =
#       GRIDFTPatPCMDI | true
#       HTTPServer | true
#       gridded | false
# thredds_service_descriptions =
#       GRIDFTPatPCMDI | PCMDI GridFTP
#       HTTPServer | PCMDI TDS
#       gridded | PCMDI OPeNDAP

# Publishing service options
#   hessian_service_url = URL of the gateway publishing service endpoint
#   hessian_service_port = SSL gateway port number
#   hessian_service_debug = true | false; if true print debugging information when the gateway is contacted
#   hessian_service_certfile = X.509 user certificate
#   hessian_service_keyfile = X.509 user key file (may be the same as the cert file)
#   hessian_service_polling_delay = seconds to wait after initial publication before checking status
#   hessian_service_polling_iterations = number of times to poll for publishing status

hessian_service_url = https://host/esgcet/remote/secure/client-cert/hessian/publishingService
hessian_service_port = 443
hessian_service_debug = false
hessian_service_certfile = %(home)s/.globus/certificate-file
hessian_service_keyfile = %(home)s/.globus/certificate-file
hessian_service_certs_location = %(home)s/.globus/certificates
hessian_service_polling_delay = 3
hessian_service_polling_iterations = 10

# offline_lister: Program to list offline datasets. The program should take the top-level directory as an argument,
#   and return a listing of "path size" on each line.
# 
#   Set this option to either:
#     srmls (and set additional options in the [srmls] section), or
#     hsi   (and set hsi options in the [hsi] section).
#
# offline_lister = srmls
offline_lister =
  HRMatPCMDI | hsi

# Uncomment this line to enable checksumming, and ensure the client is in your path.
# The form is
#   checksum = checksum_client | checksum_type
checksum = sha256sum | SHA256

# All projects
#   project_name | project_description | search_order
# There must be a [project:project_name] section for each project listed.
# search_order determines the order in which the associated handlers are searched
# when no project has been specified, with the lowest number searched first.
# The first handler that successfully opens the data file is used.
project_options = 
  cmip5 | CMIP5 | 1
  cmip6 | CMIP6  | 2
  test | Test Project | 3

# disable_colors : set to true to disable colors in publisher terminal output
disable_colors = False

#------------------------------------------------------------------------------------------
# Database initialization
# Options in this section are used by esginitialize.
[initialize]
log_level = INFO
initial_models_table = /esg/config/esgcet/esgcet_models_table.txt

# Specify the location of the CF standard name table and ESG-CET models.
# By default they are installed in:
#   SITE_PACKAGES/esgcet/config/etc
# where SITE_PACKAGES is the Python site-packages installation directory.
# initial_standard_name_table = %(home)s/.esgcet/cf-standard-name-table.xml
# initial_models_table = %(home)s/.esgcet/esgcet_models_table.txt

#------------------------------------------------------------------------------------------
# Metadata extraction
[extract]
# Issue a warning if a standard name is missing or invalid
validate_standard_names = True
log_level = INFO

#------------------------------------------------------------------------------------------
# srm-ls options
[srmls]

# The form of the SRM target is <srm_server>?SFN=<srm_archive>path
offline_lister_executable = %(home)s/work/Esgcet/esgcet/scripts/srmls.py
srmls = /usr/local/esg/bin/srm-ls
srm_server = srm://somehost.llnl.gov:6288/srm/v2/server
srm_archive = /garchive.nersc.gov

#------------------------------------------------------------------------------------------
# hsi options
[hsi]
offline_lister_executable = %(home)s/work/Esgcet/esgcet/scripts/hsils.py
hsi = /usr/local/bin/hsi
